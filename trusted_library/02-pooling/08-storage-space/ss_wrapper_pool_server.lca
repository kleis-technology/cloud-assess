/*
The wrapper pool process is responsible for allocating
the impact of the underlying pool of servers with respect
to the cpu/storage ratios.
*/

process ss_wrapper_pool_server {
    labels {
        lc_step = "manufacturing"
    }
    params {
        id = "client_storage_space"
    }
    variables {
        ratio_storage = 80 percent
        ratio_cpu = 20 percent
    }
    variables {
        total_volume = sum( storage_space_inventory match pool_id = id, volume )
        total_vcpu = sum( storage_space_inventory match pool_id = id, vcpu_size )
    }
    products {
        total_volume storage allocate ratio_storage
        total_vcpu vcpu allocate ratio_cpu
    }
    inputs {
        ss_timewindow pool_server from pool_server_fn( id = id, lc_step = lc_step )
    }
}

process ss_wrapper_pool_server {
    labels {
        lc_step = "transport"
    }
    params {
        id = "client_storage_space"
    }
    variables {
        /*
        TODO: In PCR, maximum ratio is used, which causes distortion. We use uniform distribution instead.
        */
        ratio_storage = 50 percent
        ratio_cpu = 50 percent
    }
    variables {
        total_volume = sum( storage_space_inventory match pool_id = id, volume )
        total_vcpu = sum( storage_space_inventory match pool_id = id, vcpu_size )
    }
    products {
        total_volume storage allocate ratio_storage
        total_vcpu vcpu allocate ratio_cpu
    }
    inputs {
        ss_timewindow pool_server from pool_server_fn( id = id, lc_step = lc_step )
    }
}

process ss_wrapper_pool_server {
    labels {
        lc_step = "use"
    }
    params {
        id = "client_storage_space"
    }
    variables {
        ratio_storage = 90 percent
        ratio_cpu = 10 percent
    }
    variables {
        total_volume = sum( storage_space_inventory match pool_id = id, volume )
        total_vcpu = sum( storage_space_inventory match pool_id = id, vcpu_size )
    }
    products {
        total_volume storage allocate ratio_storage
        total_vcpu vcpu allocate ratio_cpu
    }
    inputs {
        ss_timewindow pool_server from pool_server_fn( id = id, lc_step = lc_step )
    }
}

process ss_wrapper_pool_server {
    labels {
        lc_step = "end-of-life"
    }
    params {
        id = "client_storage_space"
    }
    variables {
        ratio_storage = 80 percent
        ratio_cpu = 20 percent
    }
    variables {
        total_volume = sum( storage_space_inventory match pool_id = id, volume )
        total_vcpu = sum( storage_space_inventory match pool_id = id, vcpu_size )
    }
    products {
        total_volume storage allocate ratio_storage
        total_vcpu vcpu allocate ratio_cpu
    }
    inputs {
        ss_timewindow pool_server from pool_server_fn( id = id, lc_step = lc_step )
    }
}
