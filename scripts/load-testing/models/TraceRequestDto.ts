/* tslint:disable */
/* eslint-disable */
/**
 * Cloud Assess
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.6.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DemandDto } from './DemandDto';
import {
    DemandDtoFromJSON,
    DemandDtoFromJSONTyped,
    DemandDtoToJSON,
} from './DemandDto';
import type { DatasourceDto } from './DatasourceDto';
import {
    DatasourceDtoFromJSON,
    DatasourceDtoFromJSONTyped,
    DatasourceDtoToJSON,
} from './DatasourceDto';
import type { OptionsDto } from './OptionsDto';
import {
    OptionsDtoFromJSON,
    OptionsDtoFromJSONTyped,
    OptionsDtoToJSON,
} from './OptionsDto';
import type { ParameterDto } from './ParameterDto';
import {
    ParameterDtoFromJSON,
    ParameterDtoFromJSONTyped,
    ParameterDtoToJSON,
} from './ParameterDto';

/**
 * 
 * @export
 * @interface TraceRequestDto
 */
export interface TraceRequestDto {
    /**
     * 
     * @type {string}
     * @memberof TraceRequestDto
     */
    requestId: string;
    /**
     * 
     * @type {OptionsDto}
     * @memberof TraceRequestDto
     */
    options?: OptionsDto;
    /**
     * 
     * @type {DemandDto}
     * @memberof TraceRequestDto
     */
    demand: DemandDto;
    /**
     * 
     * @type {Array<ParameterDto>}
     * @memberof TraceRequestDto
     */
    globals?: Array<ParameterDto>;
    /**
     * 
     * @type {Array<DatasourceDto>}
     * @memberof TraceRequestDto
     */
    datasources?: Array<DatasourceDto>;
}

/**
 * Check if a given object implements the TraceRequestDto interface.
 */
export function instanceOfTraceRequestDto(value: object): value is TraceRequestDto {
    if (!('requestId' in value) || value['requestId'] === undefined) return false;
    if (!('demand' in value) || value['demand'] === undefined) return false;
    return true;
}

export function TraceRequestDtoFromJSON(json: any): TraceRequestDto {
    return TraceRequestDtoFromJSONTyped(json, false);
}

export function TraceRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TraceRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'requestId': json['requestId'],
        'options': json['options'] == null ? undefined : OptionsDtoFromJSON(json['options']),
        'demand': DemandDtoFromJSON(json['demand']),
        'globals': json['globals'] == null ? undefined : ((json['globals'] as Array<any>).map(ParameterDtoFromJSON)),
        'datasources': json['datasources'] == null ? undefined : ((json['datasources'] as Array<any>).map(DatasourceDtoFromJSON)),
    };
}

export function TraceRequestDtoToJSON(value?: TraceRequestDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'requestId': value['requestId'],
        'options': OptionsDtoToJSON(value['options']),
        'demand': DemandDtoToJSON(value['demand']),
        'globals': value['globals'] == null ? undefined : ((value['globals'] as Array<any>).map(ParameterDtoToJSON)),
        'datasources': value['datasources'] == null ? undefined : ((value['datasources'] as Array<any>).map(DatasourceDtoToJSON)),
    };
}

